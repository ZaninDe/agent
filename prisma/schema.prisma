// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  contactNumber String
  name          String
  createdAt     DateTime @default(now())
  chats         Chat?
}

model Admin {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  adminId           String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Chat {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  userId         String         @db.ObjectId
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  agentIsActive  Boolean        @default(true)
  unreadMessages Int            @default(1)
  conversation   Conversation[]
  user           User           @relation(fields: [userId], references: [id])

  @@unique([userId], map: "userId_idx")
}

model Conversation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ia        String
  user      String
  audio     Boolean?
  chat      Chat?    @relation(fields: [chatId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chatId    String?  @unique @db.ObjectId
}
